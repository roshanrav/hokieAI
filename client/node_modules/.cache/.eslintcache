[{"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/index.js":"1","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/App.js":"2","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/Password.js":"3","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/Register.js":"4","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/Recovery.js":"5","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/Username.js":"6","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/middleware/auth.js":"7","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/Profile.js":"8","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/PageNotFound.js":"9","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/Reset.js":"10","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/store/store.js":"11","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/helper/convert.js":"12","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/helper/helper.js":"13","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/hooks/fetch.hook.js":"14","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/helper/validate.js":"15","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/Chatbot.js":"16","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/ChatPage.js":"17"},{"size":230,"mtime":1671369808000,"results":"18","hashOfConfig":"19"},{"size":1732,"mtime":1717737492792,"results":"20","hashOfConfig":"19"},{"size":2823,"mtime":1717674369884,"results":"21","hashOfConfig":"19"},{"size":3370,"mtime":1717244101756,"results":"22","hashOfConfig":"19"},{"size":2793,"mtime":1671369808000,"results":"23","hashOfConfig":"19"},{"size":2106,"mtime":1717091282841,"results":"24","hashOfConfig":"19"},{"size":518,"mtime":1671369808000,"results":"25","hashOfConfig":"19"},{"size":12505,"mtime":1718629212071,"results":"26","hashOfConfig":"19"},{"size":113,"mtime":1671369808000,"results":"27","hashOfConfig":"19"},{"size":2581,"mtime":1671369808000,"results":"28","hashOfConfig":"19"},{"size":239,"mtime":1671369808000,"results":"29","hashOfConfig":"19"},{"size":377,"mtime":1671369808000,"results":"30","hashOfConfig":"19"},{"size":3243,"mtime":1717243599008,"results":"31","hashOfConfig":"19"},{"size":1253,"mtime":1717232935724,"results":"32","hashOfConfig":"19"},{"size":2686,"mtime":1718176837102,"results":"33","hashOfConfig":"19"},{"size":19927,"mtime":1718649910400,"results":"34","hashOfConfig":"19"},{"size":34237,"mtime":1718640338766,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"14hkyrh",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"39"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/index.js",[],[],[],"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/App.js",[],[],"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/Password.js",[],[],"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/Register.js",[],[],"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/Recovery.js",[],[],"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/Username.js",[],[],"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/middleware/auth.js",[],[],"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/Profile.js",["91","92","93","94"],[],"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/PageNotFound.js",[],[],"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/Reset.js",["95","96"],[],"import React, { useEffect } from 'react'\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useFormik } from 'formik';\nimport { resetPasswordValidation } from '../helper/validate'\nimport { resetPassword } from '../helper/helper'\nimport { useAuthStore } from '../store/store';\nimport { useNavigate, Navigate } from 'react-router-dom';\nimport useFetch from '../hooks/fetch.hook'\n\nimport styles from '../styles/Username.module.css';\n\nexport default function Reset() {\n\n  const { username } = useAuthStore(state => state.auth);\n  const navigate = useNavigate();\n  const [{ isLoading, apiData, status, serverError }] = useFetch('createResetSession')\n\n  const formik = useFormik({\n    initialValues : {\n      password : 'admin@123',\n      confirm_pwd: 'admin@123'\n    },\n    validate : resetPasswordValidation,\n    validateOnBlur: false,\n    validateOnChange: false,\n    onSubmit : async values => {\n      \n      let resetPromise = resetPassword({ username, password: values.password })\n\n      toast.promise(resetPromise, {\n        loading: 'Updating...',\n        success: <b>Reset Successfully...!</b>,\n        error : <b>Could not Reset!</b>\n      });\n\n      resetPromise.then(function(){ navigate('/password') })\n\n    }\n  })\n\n\n  if(isLoading) return <h1 className='text-2xl font-bold'>isLoading</h1>;\n  if(serverError) return <h1 className='text-xl text-red-500'>{serverError.message}</h1>\n  if(status && status !== 201) return <Navigate to={'/password'} replace={true}></Navigate>\n\n  return (\n    <div className=\"container mx-auto\">\n\n      <Toaster position='top-center' reverseOrder={false}></Toaster>\n\n      <div className='flex justify-center items-center h-screen'>\n        <div className={styles.glass} style={{ width : \"50%\"}}>\n\n          <div className=\"title flex flex-col items-center\">\n            <h4 className='text-5xl font-bold'>Reset</h4>\n            <span className='py-4 text-xl w-2/3 text-center text-gray-500'>\n              Enter new password.\n            </span>\n          </div>\n\n          <form className='py-20' onSubmit={formik.handleSubmit}>\n              <div className=\"textbox flex flex-col items-center gap-6\">\n                  <input {...formik.getFieldProps('password')} className={styles.textbox} type=\"text\" placeholder='New Password' />\n                  <input {...formik.getFieldProps('confirm_pwd')} className={styles.textbox} type=\"text\" placeholder='Repeat Password' />\n                  <button className={styles.btn} type='submit'>Reset</button>\n              </div>\n\n          </form>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/store/store.js",[],[],"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/helper/convert.js",[],[],"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/helper/helper.js",["97","98","99"],[],"import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\n\n/** Make API Requests */\n\n\n/** To get username from Token */\nexport async function getUsername(){\n    const token = localStorage.getItem('token')\n    if(!token) return Promise.reject(\"Cannot find Token\");\n    let decode = jwt_decode(token)\n    return decode;\n}\n\n/** authenticate function */\nexport async function authenticate(username){\n    try {\n        return await axios.post('/api/authenticate', { username })\n    } catch (error) {\n        return { error : \"Username doesn't exist...!\"}\n    }\n}\n\n/** get User details */\nexport async function getUser({ username }){\n    try {\n        const { data } = await axios.get(`/api/user/${username}`);\n        return { data };\n    } catch (error) {\n        return { error : \"Password doesn't Match...!\"}\n    }\n}\n\n/** register user function */\nexport async function registerUser(credentials){\n    try {\n        const { data : { msg }, status } = await axios.post(`/api/register`, credentials);\n\n        let { username, email } = credentials;\n\n        return Promise.resolve(msg)\n    } catch (error) {\n        return Promise.reject({ error })\n    }\n}\n\n/** login function */\nexport async function verifyPassword({ username, password }){\n    try {\n        if(username){\n            const { data } = await axios.post('/api/login', { username, password })\n            return Promise.resolve({ data });\n        }\n    } catch (error) {\n        return Promise.reject({ error : \"Password doesn't Match...!\"})\n    }\n}\n\n/** update user profile function */\nexport async function updateUser(response){\n    try {\n        \n        const token = await localStorage.getItem('token');\n        const data = await axios.put('/api/updateuser', response, { headers : { \"Authorization\" : `Bearer ${token}`}});\n\n        return Promise.resolve({ data })\n    } catch (error) {\n        return Promise.reject({ error : \"Couldn't Update Profile...!\"})\n    }\n}\n\n/** generate OTP */\nexport async function generateOTP(username){\n    try {\n        const {data : { code }, status } = await axios.get('/api/generateOTP', { params : { username }});\n\n        // send mail with the OTP\n        if(status === 201){\n            let { data : { email }} = await getUser({ username });\n            let text = `Your Password Recovery OTP is ${code}. Verify and recover your password.`;\n            await axios.post('/api/registerMail', { username, userEmail: email, text, subject : \"Password Recovery OTP\"})\n        }\n        return Promise.resolve(code);\n    } catch (error) {\n        return Promise.reject({ error });\n    }\n}\n\n/** verify OTP */\nexport async function verifyOTP({ username, code }){\n    try {\n       const { data, status } = await axios.get('/api/verifyOTP', { params : { username, code }})\n       return { data, status }\n    } catch (error) {\n        return Promise.reject(error);\n    }\n}\n\n/** reset password */\nexport async function resetPassword({ username, password }){\n    try {\n        const { data, status } = await axios.put('/api/resetPassword', { username, password });\n        return Promise.resolve({ data, status})\n    } catch (error) {\n        return Promise.reject({ error })\n    }\n}","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/hooks/fetch.hook.js",[],[],"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/helper/validate.js",["100"],["101","102"],"import toast from 'react-hot-toast'\nimport { authenticate } from './helper'\n\n/** validate login page username */\nexport async function usernameValidate(values){\n    const errors = usernameVerify({}, values);\n\n    if(values.username){\n        // check user exist or not\n        const { status } = await authenticate(values.username);\n        \n        if(status !== 200){\n            errors.exist = toast.error('User does not exist...!')\n        }\n    }\n\n    return errors;\n}\n\n/** validate password */\nexport async function passwordValidate(values){\n    const errors = passwordVerify({}, values);\n\n    return errors;\n}\n\n/** validate reset password */\nexport async function resetPasswordValidation(values){\n    const errors = passwordVerify({}, values);\n\n    if(values.password !== values.confirm_pwd){\n        errors.exist = toast.error(\"Password doesn\\'t match...!\");\n    }\n\n    return errors;\n}\n\n/** validate register form */\nexport async function registerValidation(values){\n    const errors = usernameVerify({}, values);\n    passwordVerify(errors, values);\n    emailVerify(errors, values);\n\n    return errors;\n}\n\n/** validate profile page */\nexport async function profileValidation(values){\n    const errors = emailVerify({}, values);\n    return errors;\n}\n\n\n/** ************************************************* */\n\n/** validate password */\nfunction passwordVerify(errors = {}, values){\n    /* eslint-disable no-useless-escape */\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n    if(!values.password){\n        errors.password = toast.error(\"Password Required...!\");\n    } else if(values.password.includes(\" \")){\n        errors.password = toast.error(\"Wrong Password...!\");\n    }else if(values.password.length < 4){\n        errors.password = toast.error(\"Password must be more than 4 characters long\");\n    }else if(!specialChars.test(values.password)){\n        errors.password = toast.error(\"Password must have special character\");\n    }\n\n    return errors;\n}\n\n\n/** validate username */\nfunction usernameVerify(error = {}, values){\n    if(!values.username){\n        error.username = toast.error('Username Required...!');\n    }else if(values.username.includes(\" \")){\n        error.username = toast.error('Invalid Username...!')\n    }\n\n    return error;\n}\n\n/** validate email */\nfunction emailVerify(error ={}, values){\n    if(!values.email){\n        error.email = toast.error(\"Email Required...!\");\n    }else if(values.email.includes(\" \")){\n        error.email = toast.error(\"Wrong Email...!\")\n    }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\n        error.email = toast.error(\"Invalid email address...!\")\n    }\n\n    return error;\n}","/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/Chatbot.js",["103","104"],[],"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/ChatPage.js",["105","106","107","108","109","110","111","112","113","114","115","116","117","118"],[],{"ruleId":"119","severity":1,"message":"120","line":19,"column":8,"nodeType":"121","messageId":"122","endLine":19,"endColumn":13},{"ruleId":"119","severity":1,"message":"123","line":61,"column":9,"nodeType":"121","messageId":"122","endLine":61,"endColumn":17},{"ruleId":"119","severity":1,"message":"124","line":124,"column":13,"nodeType":"121","messageId":"122","endLine":124,"endColumn":23},{"ruleId":"125","severity":1,"message":"126","line":225,"column":17,"nodeType":"127","endLine":225,"endColumn":67},{"ruleId":"119","severity":1,"message":"128","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"129","line":16,"column":23,"nodeType":"121","messageId":"122","endLine":16,"endColumn":30},{"ruleId":"119","severity":1,"message":"130","line":40,"column":33,"nodeType":"121","messageId":"122","endLine":40,"endColumn":39},{"ruleId":"119","severity":1,"message":"131","line":42,"column":15,"nodeType":"121","messageId":"122","endLine":42,"endColumn":23},{"ruleId":"119","severity":1,"message":"132","line":42,"column":25,"nodeType":"121","messageId":"122","endLine":42,"endColumn":30},{"ruleId":"133","severity":1,"message":"134","line":32,"column":51,"nodeType":"135","messageId":"136","endLine":32,"endColumn":52,"suggestions":"137"},{"ruleId":"133","severity":1,"message":"138","line":59,"column":44,"nodeType":"135","messageId":"136","endLine":59,"endColumn":45,"suggestions":"139","suppressions":"140"},{"ruleId":"133","severity":1,"message":"141","line":59,"column":61,"nodeType":"135","messageId":"136","endLine":59,"endColumn":62,"suggestions":"142","suppressions":"143"},{"ruleId":"119","severity":1,"message":"144","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":14},{"ruleId":"119","severity":1,"message":"145","line":215,"column":15,"nodeType":"121","messageId":"122","endLine":215,"endColumn":32},{"ruleId":"119","severity":1,"message":"146","line":22,"column":10,"nodeType":"121","messageId":"122","endLine":22,"endColumn":15},{"ruleId":"119","severity":1,"message":"147","line":23,"column":9,"nodeType":"121","messageId":"122","endLine":23,"endColumn":20},{"ruleId":"119","severity":1,"message":"148","line":24,"column":10,"nodeType":"121","messageId":"122","endLine":24,"endColumn":18},{"ruleId":"119","severity":1,"message":"149","line":24,"column":20,"nodeType":"121","messageId":"122","endLine":24,"endColumn":31},{"ruleId":"119","severity":1,"message":"150","line":25,"column":10,"nodeType":"121","messageId":"122","endLine":25,"endColumn":19},{"ruleId":"119","severity":1,"message":"151","line":25,"column":21,"nodeType":"121","messageId":"122","endLine":25,"endColumn":33},{"ruleId":"119","severity":1,"message":"152","line":28,"column":12,"nodeType":"121","messageId":"122","endLine":28,"endColumn":21},{"ruleId":"119","severity":1,"message":"153","line":28,"column":32,"nodeType":"121","messageId":"122","endLine":28,"endColumn":43},{"ruleId":"154","severity":1,"message":"155","line":45,"column":6,"nodeType":"156","endLine":45,"endColumn":14,"suggestions":"157"},{"ruleId":"154","severity":1,"message":"158","line":67,"column":6,"nodeType":"156","endLine":67,"endColumn":8,"suggestions":"159"},{"ruleId":"154","severity":1,"message":"160","line":89,"column":6,"nodeType":"156","endLine":89,"endColumn":25,"suggestions":"161"},{"ruleId":"119","severity":1,"message":"162","line":224,"column":9,"nodeType":"121","messageId":"122","endLine":224,"endColumn":19},{"ruleId":"119","severity":1,"message":"163","line":240,"column":9,"nodeType":"121","messageId":"122","endLine":240,"endColumn":15},{"ruleId":"119","severity":1,"message":"164","line":242,"column":9,"nodeType":"121","messageId":"122","endLine":242,"endColumn":21},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'onUpload' is assigned a value but never used.","'fullPrompt' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'apiData' is assigned a value but never used.","'status' is assigned a value but never used.","'username' is assigned a value but never used.","'email' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\'.","Literal","unnecessaryEscape",["165","166"],"Unnecessary escape character: \\[.",["167","168"],["169"],"Unnecessary escape character: \\/.",["170","171"],["172"],"'vtLogo' is defined but never used.","'handleButtonClick' is assigned a value but never used.","'quest' is assigned a value but never used.","'studentName' is assigned a value but never used.","'userName' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'userImage' is assigned a value but never used.","'setUserImage' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'serverError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialChatGPT'. Either include it or remove the dependency array.","ArrayExpression",["173"],"React Hook useEffect has a missing dependency: 'getChatbotFromPrompt'. Either include it or remove the dependency array.",["174"],"React Hook useEffect has a missing dependency: 'setPromptForCategory'. Either include it or remove the dependency array.",["175"],"'chatStripe' is assigned a value but never used.","'loader' is assigned a value but never used.","'loadInterval' is assigned a value but never used.",{"messageId":"176","fix":"177","desc":"178"},{"messageId":"179","fix":"180","desc":"181"},{"messageId":"176","fix":"182","desc":"178"},{"messageId":"179","fix":"183","desc":"181"},{"kind":"184","justification":"185"},{"messageId":"176","fix":"186","desc":"178"},{"messageId":"179","fix":"187","desc":"181"},{"kind":"184","justification":"185"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"removeEscape",{"range":"194","text":"185"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"195","text":"196"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"197","text":"185"},{"range":"198","text":"196"},"directive","",{"range":"199","text":"185"},{"range":"200","text":"196"},"Update the dependencies array to be: [initialChatGPT, prompt]",{"range":"201","text":"202"},"Update the dependencies array to be: [getChatbotFromPrompt]",{"range":"203","text":"204"},"Update the dependencies array to be: [apiData, setPromptForCategory, username]",{"range":"205","text":"206"},[850,851],[850,850],"\\",[1475,1476],[1475,1475],[1492,1493],[1492,1492],[1533,1541],"[initialChatGPT, prompt]",[2137,2139],"[getChatbotFromPrompt]",[2811,2830],"[apiData, setPromptForCategory, username]"]