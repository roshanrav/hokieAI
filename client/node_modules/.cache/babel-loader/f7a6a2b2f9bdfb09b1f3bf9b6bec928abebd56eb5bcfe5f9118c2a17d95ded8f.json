{"ast":null,"code":"var _jsxFileName = \"/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const location = useLocation();\n  const {\n    prompt\n  } = location.state || {};\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    if (prompt) {\n      setMessages([...messages, {\n        text: prompt,\n        sender: 'system'\n      }]);\n    }\n  }, [prompt]);\n  const handleSendMessage = message => {\n    setMessages([...messages, {\n      text: message,\n      sender: 'user'\n    }]);\n    // Handle sending the message to the backend or chatbot service\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSendMessage(\"Example message\"),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"1ncqsxpnPKjJAbErnP9cDwCKrRs=\", false, function () {\n  return [useLocation];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","ChatPage","location","prompt","state","messages","setMessages","text","sender","handleSendMessage","message","map","msg","index"],"sources":["/Users/roshanravindran/Downloads/MERN_Login_App_with_ResetEmail-Main/client/src/components/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst ChatPage = () => {\n  const location = useLocation();\n  const { prompt } = location.state || {};\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    if (prompt) {\n      setMessages([...messages, { text: prompt, sender: 'system' }]);\n    }\n  }, [prompt]);\n\n  const handleSendMessage = (message) => {\n    setMessages([...messages, { text: message, sender: 'user' }]);\n    // Handle sending the message to the backend or chatbot service\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`message ${msg.sender}`}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"message-input\">\n        <input type=\"text\" placeholder=\"Type a message...\" />\n        <button onClick={() => handleSendMessage(\"Example message\")}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAMC,QAAQ,GAAGF,WAAW,EAAE;EAC9B,MAAM;IAAEG;EAAO,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI,CAAC,CAAC;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,IAAII,MAAM,EAAE;MACVG,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEE,IAAI,EAAEJ,MAAM;QAAEK,MAAM,EAAE;MAAS,CAAC,CAAC,CAAC;IAChE;EACF,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,MAAMM,iBAAiB,GAAIC,OAAO,IAAK;IACrCJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEE,IAAI,EAAEG,OAAO;MAAEF,MAAM,EAAE;IAAO,CAAC,CAAC,CAAC;IAC7D;EACF,CAAC;;EAED,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC7B;MAAK,SAAS,EAAC,UAAU;MAAA,UACtBH,QAAQ,CAACM,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB;QAAiB,SAAS,EAAG,WAAUD,GAAG,CAACJ,MAAO,EAAE;QAAA,UACjDI,GAAG,CAACL;MAAI,GADDM,KAAK;QAAA;QAAA;QAAA;MAAA,QAGhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC5B;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAG,eACrD;QAAQ,OAAO,EAAE,MAAMJ,iBAAiB,CAAC,iBAAiB,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QACtE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA/BIR,QAAQ;EAAA,QACKD,WAAW;AAAA;AAAA,KADxBC,QAAQ;AAiCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}